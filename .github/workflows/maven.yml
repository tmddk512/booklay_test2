# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:



  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  name: SonarQube Scan
  jobs:
    sonarqube:
      name: SonarQube Trigger
      runs-on: ubuntu-latest
      steps:
        - name: Checking out
          uses: actions/checkout@master
          with:
            # Disabling shallow clone is recommended for improving relevancy of reporting
            fetch-depth: 0
        - name: SonarQube Scan
          uses: kitabisa/sonarqube-action@v1.2.0
          with:
            host: ${{ secrets.SONARQUBE_HOST }}
            login: ${{ secrets.SONARQUBE_TOKEN }}
        - name: upload file
          uses: appleboy/scp-action@master
          with:
            host: ${{ secrets.SSH_IP }}
            username: ${{ secrets.SSH_ID }}
            key: ${{ secrets.SSH_KEY }}
            port: ${{ secrets.SSH_PORT }}
            source: "target/*.jar"
            target: "~/"
            rm: false

        - name: execute shell script
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.SSH_IP }}
            username: ${{ secrets.SSH_ID }}
            key: ${{ secrets.SSH_KEY }}
            port: ${{ secrets.SSH_PORT }}
            script_stop: true
            script: "./startup.sh"